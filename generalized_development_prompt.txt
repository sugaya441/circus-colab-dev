✅ 改修・追加作業における厳守ルール（再利用可能プロンプト）

このプロンプトは、あらゆるコードベースに対する改修・追加作業を行う際に適用すべき「最低限の開発運用規範」を示すものです。
特定のプロジェクトに依存しない汎用的な形式で記述されています。

---

■ 改修方針（開発ルール）

1. 🛠️ **既存機能の保持を最優先とすること**
   - 機能の削除・変更を伴う場合は、事前に目的と影響範囲を明示せよ。
   - 基本方針は「既存機能を壊さずに追加する」。

2. ❌ **安易なコード削除は禁止**
   - 動作しない／未使用のコードであっても、無断削除は行わずコメントアウト＋明示コメントで対応。
   - 「機能の痕跡を残す」ことで後の検証・復元が容易になるよう配慮すること。

3. 🚫 **一括置換の全面禁止**
   - 関数単位・キーワード単位・特定インデントレベル単位などを含む一括操作はすべて禁止。
   - 書き換えは「影響を確認しながら行う行単位の慎重な修正」に限定すること。

4. 🧪 **提出前には以下の4点すべてのチェックを実施し、未確認のファイル提出は厳禁**
   - ✅ 文法チェック（構文的な正しさ）
   - ✅ 処理フローチェック（設計上の破綻がないこと）
   - ✅ 機能フローチェック（UI・保存・入出力の整合性）
   - ✅ 既存機能との整合性（UI要素／保存データ／ルール選択など）

---

■ 改修設計の原則

- ✳️ 「コードは読む人のために書く」ことを忘れるな。
- ✳️ 安定稼働している構造を破壊しない「非侵襲的改修」が第一選択肢。
- ✳️ 新機能は「補完的」「分離的」に設計し、既存フローに最小限しか影響を与えない構造で構築すること。

---

■ 提出ポリシー

- 提出ファイルは上記すべての項目において**確認・検証済であること**を前提とする。
- 未検証・未整合なファイルを提出することは「信頼の放棄」であり、プロジェクト品質に対する背信行為とみなす。

